<!--
    작성자: 윤정도
    생성일: 2/27/2023
-->

<Window x:Class="SGToolsUI.View.MainView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:SGToolsUI" 
        xmlns:vm="clr-namespace:SGToolsUI.ViewModel"
        xmlns:model="clr-namespace:SGToolsUI.Model"
        xmlns:cv="clr-namespace:SGToolsCommon.Converter;assembly=SGToolsCommon"
        xmlns:sga="clr-namespace:SGToolsCommon.Sga;assembly=SGToolsCommon"
        xmlns:custom_ctrl="clr-namespace:SGToolsCommon.CustomControl;assembly=SGToolsCommon"
        xmlns:custom_style="clr-namespace:SGToolsCommon.CustomStyle;assembly=SGToolsCommon"
        xmlns:sys="clr-namespace:System;assembly=System.Runtime"
        xmlns:i="clr-namespace:Microsoft.Xaml.Behaviors;assembly=Microsoft.Xaml.Behaviors"
        xmlns:c="http://schemas.xceed.com/wpf/xaml/toolkit"
        Name="View"
        FontSize="14"
        AllowsTransparency="True" WindowStyle="None"
        SizeToContent="WidthAndHeight"
        Width="Auto"
        Height="Auto"
        Closing="MainView_OnClosing"
        Style="{StaticResource OneLineWindow}"
        DataContext="{Binding RelativeSource={RelativeSource Self}}">
    
    <DockPanel Name="MainDockPanel"
               DataContext="{Binding Path=ViewModel}">
        <i:Interaction.Triggers>
            <i:EventTrigger EventName="MouseMove">
                <i:InvokeCommandAction Command="{Binding Commander.MouseMoveOnWindow}"
                                       PassEventArgsToCommand="True" />
            </i:EventTrigger>
            <i:EventTrigger EventName="MouseWheel">
                <i:InvokeCommandAction Command="{Binding Commander.CanvasWheel}"
                                       PassEventArgsToCommand="True" />
            </i:EventTrigger>
        </i:Interaction.Triggers>

        <!-- ###############################################################################
        
                                                타이틀바
        
            ############################################################################### -->

        <custom_ctrl:TitleBar Title="슈타인즈게이트 : UI 툴" DockPanel.Dock="Top"/>
        <Separator DockPanel.Dock="Top"/>


        <!-- ###############################################################################
        
                                              상태 표시줄
        
            ############################################################################### -->
        <Grid DockPanel.Dock="Bottom" >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="{Binding Source={x:Static local:Constant.LeftPaneWidth}}"></ColumnDefinition>
                <ColumnDefinition Width="1"></ColumnDefinition>
                <ColumnDefinition Width="{Binding Source={x:Static local:Constant.CanvasWidth}}" x:Name="CanvasStatusBarColumnDefinition"></ColumnDefinition>
                <ColumnDefinition Width="1"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <TextBox Grid.Column="0" Text="{Binding MouseOnMonitor, Converter={cv:VectorStringConverter}}" Style="{StaticResource ReadonlyTextBox}"/>
                <TextBox Grid.Column="1" Text="{Binding MouseOnWindow, Converter={cv:VectorStringConverter}}" Style="{StaticResource ReadonlyTextBox}"/>
                <TextBox Grid.Column="2" Text="{Binding MouseOnCanvas, Converter={cv:VectorStringConverter}}" Style="{StaticResource ReadonlyTextBox}"/>
            </Grid>
            <Border     Grid.Column="1"  Style="{StaticResource BorderSeparatorVertical}"/>
            <TextBox    Grid.Column="2"  Text="{Binding CanvasSelectionStatus}" Margin="5, 0, 0, 0" Style="{StaticResource ReadonlyTextBox}"/>
            <Border     Grid.Column="3"  Style="{StaticResource BorderSeparatorVertical}" />
            <TextBox    Grid.Column="4"  Text="{Binding ResourceSelectionStatus}" Margin="5, 0, 0, 0" Style="{StaticResource ReadonlyTextBox}"/>
        </Grid>
        <Separator DockPanel.Dock="Bottom" />

        <!-- ###############################################################################
        
                                              상단 메뉴
        
            ############################################################################### -->
        <Menu DockPanel.Dock="Top">
            <MenuItem Header="파일">
                <MenuItem Header="열기"/>
                <MenuItem Header="저장" />
            </MenuItem>
            <MenuItem Style="{StaticResource MenuItemSeparator}"/>
            <MenuItem Header="도구">
                <MenuItem Header="설정" Command="{Binding Commander.OpenSetting}" />
            </MenuItem>
            <MenuItem Style="{StaticResource MenuItemSeparator}"/>
        </Menu>
        <Separator DockPanel.Dock="Top"/>

        <!-- ###############################################################################
        
                                              트리뷰
        
            ############################################################################### -->

        <StackPanel>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="30"/>
                    <ColumnDefinition Width="30" />
                    <ColumnDefinition Width="30" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <Button Name="AddGroupUIElementButton" Grid.Column="0" Command="{Binding Commander.AddUIElement}" CommandParameter="{x:Static model:SGUIElementType.Group}" Style="{StaticResource ImageButton}" custom_style:ImageButtonProperty.Image="/SGToolsUI;component/Resource/Icon/ui_group.ico"/>
                <Button Name="AddButtonUIElementButton" Grid.Column="1" Command="{Binding Commander.AddUIElement}" CommandParameter="{x:Static model:SGUIElementType.Button}" Style="{StaticResource ImageButton}" custom_style:ImageButtonProperty.Image="/SGToolsUI;component/Resource/Icon/ui_button.ico"/>
                <Button Name="DeleteUIElementButton" Grid.Column="2" Command="{Binding Commander.DeleteUIElement}" Style="{StaticResource ImageButton}" custom_style:ImageButtonProperty.Image="/SGToolsCommon;component/Resource/Icon/common_delete.ico"/>
            </Grid>
            <Separator/>

            <custom_ctrl:StretchingTreeView Width="{Binding Source={x:Static local:Constant.LeftPaneWidth}}"
                                            Background="Transparent"
                                            BorderThickness="0"
                                            ItemTemplateSelector="{x:Static model:SGUIElementSelector.Selector}"
                                            ItemsSource="{Binding GroupMaster.Children}"
                                            Style="{StaticResource StretchTreeView}">
            </custom_ctrl:StretchingTreeView>

        </StackPanel>
        <Border Style="{StaticResource BorderSeparatorVertical}" DockPanel.Dock="Left"/>


        <!-- ###############################################################################
        
                                              캔버스
        
            ############################################################################### -->
        <StackPanel DockPanel.Dock="Left" Name="CanvasPanel">
            <local:CustomCanvas x:Name="MainCanvas"
                                Background="LightGray"
                                Width="{x:Static local:Constant.CanvasWidth}"
                                Height="{x:Static local:Constant.CanvasHeight}" />
            <TextBlock Text="오하요"></TextBlock>
        </StackPanel>




        <Grid DockPanel.Dock="Left">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="*"></RowDefinition>
                <RowDefinition Height="*"></RowDefinition>
            </Grid.RowDefinitions>

            <Grid Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="30"></ColumnDefinition>
                    <ColumnDefinition Width="30"></ColumnDefinition>
                    <ColumnDefinition Width="30"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Button Grid.Column="0" Command="{Binding Commander.ReloadPackage}" Style="{StaticResource ImageButton}" custom_style:ImageButtonProperty.Image="/SGToolsCommon;component/Resource/Icon/common_refresh.ico"/>
            </Grid>
            
            <StackPanel Grid.Row="1"
                        Orientation="Horizontal">
                <ListBox MinWidth="100"
                         MaxWidth="100"
                         Name="PackageListBox"
                         ScrollViewer.VerticalScrollBarVisibility="Hidden"
                         Style="{StaticResource StretchListBox}"
                         ItemsSource="{Binding PackManager.Packages}">
                    <ListBox.ItemTemplate>
                        <DataTemplate DataType="{x:Type sga:SgaPackage}">

                            <TextBlock Text="{
                            Binding FileNameWithoutExt, 
                            Converter={cv:SgaFileNameConverter}, 
                            ConverterParameter={x:Static sga:SgaPackageType.Interface}}">
                                <!-- 리스트박스 아이템 더블클릭으로 커맨드를 실행하기 위함 -->
                                <TextBlock.InputBindings>
                                    <MouseBinding MouseAction="LeftDoubleClick"
                                                  Command="{Binding DataContext.Commander.SelectPackage, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}"
                                                  CommandParameter="{Binding}" />
                                </TextBlock.InputBindings>
                            </TextBlock>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
                <ListBox MinWidth="150"
                         MaxWidth="150"
                         Name="ElementListBox"
                         ScrollViewer.VerticalScrollBarVisibility="Hidden"
                         Style="{StaticResource StretchListBox}"
                         ItemsSource="{Binding SelectedPackage.ElementHeaderList}">
                    <ListBox.ItemTemplate>
                        <DataTemplate DataType="{x:Type sga:SgaElementHeader}">
                            <TextBlock Text="{Binding Name}">
                                <!-- 리스트박스 아이템 더블클릭으로 커맨드를 실행하기 위함 -->
                                <TextBlock.InputBindings>
                                    <MouseBinding MouseAction="LeftDoubleClick"
                                                  Command="{Binding DataContext.Commander.SelectElement, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}"
                                                  CommandParameter="{Binding}" />
                                </TextBlock.InputBindings>
                                <TextBlock.ContextMenu>
                                    <ContextMenu>
                                        <MenuItem Header="안녕"></MenuItem>
                                    </ContextMenu>
                                </TextBlock.ContextMenu>
                            </TextBlock>
                        </DataTemplate>
                    </ListBox.ItemTemplate>

                </ListBox>
                <custom_ctrl:PlaceholderImageListBox MinWidth="100"
                                             MaxWidth="100"
                                             Name="SpriteListBox"
                                             ScrollViewer.VerticalScrollBarVisibility="Hidden"
                                             PlaceholderImageSource="/SGToolsCommon;component/Resource/Icon/common_music.ico"
                                             PlaceholderImageSourceWidth="30"
                                             PlaceholderImageSourceHeight="30"
                                             PlaceholderImageSourceOpacity="0.5"
                                             Style="{StaticResource StretchListBox}"
                                             ItemsSource="{Binding SelectedImage.SpriteList}">
                    <custom_ctrl:PlaceholderImageListBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding FrameIndex}">
                                <i:Interaction.Triggers>
                                    <!--리스트 박스 이벤트를 커맨드로 실행하기 위함-->
                                    <i:EventTrigger EventName="MouseEnter">
                                        <i:InvokeCommandAction Command="{Binding DataContext.Commander.SpritePreview, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}"
                                                               PassEventArgsToCommand="True" />
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="MouseLeave">
                                        <i:InvokeCommandAction Command="{Binding DataContext.Commander.SpritePreview, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}"
                                                               PassEventArgsToCommand="True" />
                                    </i:EventTrigger>
                                    <i:EventTrigger EventName="MouseLeftButtonDown">
                                        <i:InvokeCommandAction Command="{Binding DataContext.Commander.SelectSprite, RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}"
                                                               PassEventArgsToCommand="True" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </TextBlock>
                        </DataTemplate>
                    </custom_ctrl:PlaceholderImageListBox.ItemTemplate>
                </custom_ctrl:PlaceholderImageListBox>
            </StackPanel>

            <Grid Grid.Row="2">
                <c:PropertyGrid Name="ElementPropertyGrid"/>
            </Grid>
        </Grid>

        
    </DockPanel>
</Window>