<!--
    작성자: 윤정도
    생성일: 2/27/2023
-->

<Window x:Class="SGToolsUI.View.MainView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        
        xmlns:i="clr-namespace:Microsoft.Xaml.Behaviors;assembly=Microsoft.Xaml.Behaviors"
        xmlns:acb="clr-namespace:AttachedCommandBehavior;assembly=AttachedCommandBehavior"
        xmlns:sys="clr-namespace:System;assembly=System.Runtime"
        xmlns:c="http://schemas.xceed.com/wpf/xaml/toolkit"


        xmlns:local="clr-namespace:SGToolsUI"
        xmlns:vm="clr-namespace:SGToolsUI.ViewModel"
        xmlns:model="clr-namespace:SGToolsUI.Model"
        xmlns:ui_res="clr-namespace:SGToolsUI.Resource"
        xmlns:ui_ctrl="clr-namespace:SGToolsUI.CustomControl"
        xmlns:ui_selector="clr-namespace:SGToolsUI.ModelSelector"

        
        xmlns:sga="clr-namespace:SGToolsCommon.Sga;assembly=SGToolsCommon"
        xmlns:common_ctrl="clr-namespace:SGToolsCommon.CustomControl;assembly=SGToolsCommon"
        xmlns:common_style="clr-namespace:SGToolsCommon.CustomStyle;assembly=SGToolsCommon"
        xmlns:common_res="clr-namespace:SGToolsCommon.Resource;assembly=SGToolsCommon"
        
        Name="View"
        FontSize="14"
        AllowsTransparency="True" WindowStyle="None"
        SizeToContent="WidthAndHeight"

        Closing="MainView_OnClosing"
        PreviewMouseMove="MainView_OnPreviewMouseMove"
        PreviewMouseUp="MainView_OnPreviewMouseUp"
        MouseLeave="MainView_OnMouseLeave"
        PreviewKeyDown="MainView_OnKeyDown"
        PreviewKeyUp="MainView_OnKeyUp"
        Loaded="MainView_OnLoaded"
        Style="{StaticResource OneLineWindow}"
        DataContext="{Binding RelativeSource={RelativeSource Self}}">
    <DockPanel Name="MainDockPanel"
               DataContext="{Binding Path=ViewModel}">
        <i:Interaction.Triggers>
            <i:EventTrigger EventName="MouseMove">
                <i:InvokeCommandAction Command="{Binding Commander.MouseMoveOnWindow}"
                                       PassEventArgsToCommand="True" />
            </i:EventTrigger>
            <i:EventTrigger EventName="MouseWheel">
                <i:InvokeCommandAction Command="{Binding Commander.CanvasZoomWheel}"
                                       PassEventArgsToCommand="True" />
            </i:EventTrigger>
        </i:Interaction.Triggers>

        <!-- ###############################################################################
        
                                                타이틀바
        
            ############################################################################### -->

        <common_ctrl:TitleBar Name="TitlePanel" Title="슈타인즈게이트 : UITool" DockPanel.Dock="Top"/>
        <Separator DockPanel.Dock="Top">
        </Separator>


        <!-- ###############################################################################
        
                                              상태 표시줄
        
            ############################################################################### -->
        <Grid DockPanel.Dock="Bottom" >
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="{Binding Source={x:Static local:Constant.LeftPaneWidth}}"/>
                <ColumnDefinition Width="1"></ColumnDefinition>
                <ColumnDefinition Width="{Binding ZoomState.BaseCanvasStatusBarWidth, Mode=OneWay}"/>
                <ColumnDefinition Width="1"></ColumnDefinition>
                <ColumnDefinition Width="*"></ColumnDefinition>
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <TextBox Grid.Column="0" Text="{Binding MouseOnMonitor, Converter={StaticResource VectorStringConverter}}" Style="{StaticResource ReadonlyTextBox}"/>
                <TextBox Grid.Column="1" Text="{Binding MouseOnWindow, Converter={StaticResource VectorStringConverter}}" Style="{StaticResource ReadonlyTextBox}"/>
                <TextBox Grid.Column="2" Text="{Binding MouseOnCanvas, Converter={StaticResource VectorStringConverter}}" Style="{StaticResource ReadonlyTextBox}"/>
            </Grid>
            <Border Grid.Column="1"  Style="{StaticResource BorderSeparatorVertical}"/>
            <Grid Grid.Column="2" >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="50"/>
                    <ColumnDefinition Width="16"/>
                    <ColumnDefinition Width="16" />
                    <ColumnDefinition Width="16" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <TextBox Grid.Column="0"  Text="{Binding ZoomState.ZoomLevelXString, Mode=OneWay}"  Margin="5, 0, 0, 0" Style="{StaticResource ReadonlyTextBox}"/>
                <Button Name="ZoomLevelDownButton" Grid.Column="1" Command="{Binding Commander.CanvasZoomUp}" Style="{StaticResource ImageButton}" common_style:ImageButtonProperty.Image="{Binding Converter={StaticResource PackUrlImageSourceConverter}, ConverterParameter={x:Static common_res:R.IconCommonDownKey}}" />
                <Button Name="ZoomLevelUpButton" Grid.Column="2" Command="{Binding Commander.CanvasZoomDown}" Style="{StaticResource ImageButton}" common_style:ImageButtonProperty.Image="{Binding Converter={StaticResource PackUrlImageSourceConverter}, ConverterParameter={x:Static common_res:R.IconCommonUpKey}}" />
                <Button Name="ZoomLevelResetButton" Grid.Column="3" Command="{Binding Commander.CanvasZoomReset}" IsEnabled="{Binding ZoomState.IsNotDefaultZoomLevel}" Style="{StaticResource ImageButton}" common_style:ImageButtonProperty.Image="{Binding Converter={StaticResource PackUrlImageSourceConverter}, ConverterParameter={x:Static common_res:R.IconCommonResetKey}}"/>
                <TextBox Grid.Column="4"  Text="{Binding CanvasSelectionStatus}" Style="{StaticResource ReadonlyTextBox}"/>
            </Grid>
            <Border     Grid.Column="3"  Style="{StaticResource BorderSeparatorVertical}" />
            <TextBox    Grid.Column="4"  Text="{Binding ResourceSelectionStatus}" Margin="5, 0, 0, 0" Style="{StaticResource ReadonlyTextBox}"/>
        </Grid>
        <Separator DockPanel.Dock="Bottom" />

        <!-- ###############################################################################
        
                                              상단 메뉴
        
            ############################################################################### -->
        <Menu DockPanel.Dock="Top">
            <MenuItem Header="파일">
                <MenuItem Header="열기"/>
                <MenuItem Header="저장" />
            </MenuItem>
            <MenuItem Style="{StaticResource MenuItemSeparator}"/>
            <MenuItem Header="도구">
                <MenuItem Header="설정" Command="{Binding Commander.OpenSetting}" />
            </MenuItem>
            <MenuItem Style="{StaticResource MenuItemSeparator}"/>
        </Menu>
        <Separator DockPanel.Dock="Top"/>

 

        <!-- ###############################################################################
        
                                              트리뷰
        
            ############################################################################### -->

        <Grid DockPanel.Dock="Left">
            <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="1" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <ScrollViewer Grid.Column="0" Name="UIElementTreeViewScrollViewer" Height="Auto" Width="{Binding Source={x:Static local:Constant.LeftPaneWidth}}" VerticalScrollBarVisibility="Auto">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <StackPanel Grid.Row="0">
                         <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="30"/>
                                <ColumnDefinition Width="30" />
                                <ColumnDefinition Width="30" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <Button Name="AddGroupUIElementButton" Grid.Column="0" Command="{Binding Commander.CreateUIElement}" CommandParameter="{x:Static model:SGUIElementType.Group}" Style="{StaticResource ImageButton}" common_style:ImageButtonProperty.Image="{x:Static ui_res:R.UIGroupIconImageSource}"/>
                            <Button Name="AddButtonUIElementButton" Grid.Column="1" Command="{Binding Commander.CreateUIElement}" CommandParameter="{x:Static model:SGUIElementType.Button}" Style="{StaticResource ImageButton}" common_style:ImageButtonProperty.Image="{x:Static ui_res:R.UIButtonIconImageSource}"/>
                            <Button Name="DeleteUIElementButton" Grid.Column="2" Command="{Binding Commander.DeleteUIElement}" Style="{StaticResource ImageButton}" common_style:ImageButtonProperty.Image="{Binding Converter={StaticResource PackUrlImageSourceConverter}, ConverterParameter={x:Static common_res:R.IconCommonDeleteKey}}"/>
                        </Grid>
                        <Separator />
                    </StackPanel>

                    <ui_ctrl:UIElementTreeView Grid.Row="1"
                                                   x:Name="UIElementTreeView"
                                                   Background="Transparent"
                                                   BorderThickness="0"
                                                   ItemTemplateSelector="{x:Static ui_selector:UIElementTreeViewSelector.Selector}"
                                                   ItemsSource="{Binding GroupMaster.Children}"
                                                   Style="{StaticResource UIElementTreeView}">
                    </ui_ctrl:UIElementTreeView>
                </Grid>
            </ScrollViewer>
            <Border Grid.Row="1" Style="{StaticResource BorderSeparatorHorizontal}"/>
            <Grid Grid.Row="2"> 
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="선택됨: "/>
                    <TextBlock Text="{Binding GroupMaster.SelectedElement.VisualName}"/>
                    <Image Margin="4, 0, 0, 0" Width="16" Source="{Binding Converter={StaticResource PackUrlImageSourceConverter}, ConverterParameter={x:Static common_res:R.IconCommonCheckedKey}}">
                        <Image.Style>
                            <Style TargetType="Image">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding GroupMaster.SelectedElement.Picked}" Value="True">
                                        <Setter Property="Opacity" Value="1"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding GroupMaster.SelectedElement.Picked}" Value="False">
                                        <Setter Property="Opacity" Value="0"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding GroupMaster.HasPickedElement}" Value="False">
                                        <Setter Property="Opacity" Value="0" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Image.Style>
                    </Image>
                </StackPanel>
            </Grid>
        </Grid>

        
        <Border Style="{StaticResource BorderSeparatorVertical}" DockPanel.Dock="Left"/>

        

        <StackPanel DockPanel.Dock="Left" Name="CanvasPanel">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="30"/>
                    <ColumnDefinition Width="30" />
                    <ColumnDefinition Width="30" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <Button Name="ToggleCanvasGridButton" Grid.Column="0" Command="{Binding Commander.ToggleCanvasGrid}" Style="{StaticResource ImageButton}" common_style:ImageButtonProperty.Image="{Binding Converter={StaticResource PackUrlImageSourceConverter}, ConverterParameter={x:Static common_res:R.IconCommonGridKey}}"/>
                <Button Name="ToggleCanvasViewportButton" Grid.Column="1" Command="{Binding Commander.ToggleCanvasViewport}" Style="{StaticResource ImageButton}" common_style:ImageButtonProperty.Image="{Binding Converter={StaticResource PackUrlImageSourceConverter}, ConverterParameter={x:Static common_res:R.IconCommonRectKey}}"/>
            </Grid>
            <Grid>

                <!-- ###############################################################################
        
                                              엘리먼트 캔버스
        
                ############################################################################### -->
                <ui_ctrl:UIElementItemsControl x:Name="UIElementsControl"
                                               ItemsSource="{Binding GroupMaster.PickedElements}"
                                               ItemTemplateSelector="{x:Static ui_selector:UIElementCanvasSelector.Selector}"
                                               Style="{StaticResource UIElementItemsControl}">
                </ui_ctrl:UIElementItemsControl>


                <!-- ###############################################################################
        
                                              쉐이프 캔버스
        
                ############################################################################### -->


                <ui_ctrl:CanvasShapeItemsControl x:Name="CanvasShapesControl"
                                           ItemsSource="{Binding CanvasShapes, RelativeSource={RelativeSource Self}}"
                                           ItemTemplateSelector="{x:Static ui_selector:CanvasShapeSelector.Selector}"
                                           Style="{StaticResource CanvasShapeItemsControl}">
                </ui_ctrl:CanvasShapeItemsControl>
            </Grid>
        </StackPanel>



        <!-- ###############################################################################
        
                                        우측 패널
        
        ############################################################################### -->
        <Grid DockPanel.Dock="Left">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"></RowDefinition>
                <RowDefinition Height="200"></RowDefinition>
                <RowDefinition Height="Auto"></RowDefinition>
            </Grid.RowDefinitions>

            <Grid Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="30"></ColumnDefinition>
                    <ColumnDefinition Width="30"></ColumnDefinition>
                    <ColumnDefinition Width="30"></ColumnDefinition>
                    <ColumnDefinition Width="*"></ColumnDefinition>
                </Grid.ColumnDefinitions>
                <Button Grid.Column="0" Command="{Binding Commander.ReloadSgaPackage}" Style="{StaticResource ImageButton}" common_style:ImageButtonProperty.Image="{Binding Converter={StaticResource PackUrlImageSourceConverter}, ConverterParameter={x:Static common_res:R.IconCommonRefreshKey}}"/>

                <c:WatermarkTextBox Watermark="검색할 내용 입력" Grid.Column="3" Name="SgaResourceSearchTextBox" TextWrapping="NoWrap" AcceptsReturn="False" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" KeyDown="SgaResourceSearchTextBox_OnKeyDown">
                    <c:WatermarkTextBox.Style>
                        <Style TargetType="c:WatermarkTextBox">
                            <Style.Triggers>
                                <Trigger Property="IsFocused" Value="True">
                                    <Setter Property="Text" Value="" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </c:WatermarkTextBox.Style>

                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="TextChanged">
                            <i:InvokeCommandAction Command="{Binding Commander.SearchSgaResource}" 
                                                   CommandParameter="{Binding Path=Text, ElementName=SgaResourceSearchTextBox}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </c:WatermarkTextBox>
            </Grid>
            
            <StackPanel Grid.Row="1"
                        Orientation="Horizontal">
                <ui_ctrl:SgaPackageListBox 
                        MinWidth="100"
                         MaxWidth="100"
                         x:Name="PackageListBox"
                         ScrollViewer.VerticalScrollBarVisibility="Hidden"
                         Style="{StaticResource SgaPackageListBox}"
                         ItemsSource="{Binding PackManager.Packages, Mode=OneWay}"
                         SelectedItem="{Binding SelectedPackage, Mode=OneWay}">
                </ui_ctrl:SgaPackageListBox>

                <ui_ctrl:SgaElementListBox MinWidth="150"
                         MaxWidth="150" 
                         x:Name="ElementListBox"
                         ScrollViewer.VerticalScrollBarVisibility="Hidden"
                         Style="{StaticResource SgaElementListBox}"
                         SelectedItem="{Binding SelectedImage.Header, Mode=OneWay}"
                         ItemsSource="{Binding SelectedPackage.ElementHeaderList, Mode=OneWay}">
                </ui_ctrl:SgaElementListBox>

                <ui_ctrl:SgaSpriteListBox MinWidth="100"
                         MaxWidth="100"
                         x:Name="SpriteListBox"
                         ScrollViewer.VerticalScrollBarVisibility="Hidden" 
                         Style="{StaticResource SgaSpriteListBox}"
                         SelectedItem="{Binding SelectedSprite, Mode=OneWay}"
                         ItemsSource="{Binding SelectedImage.SpriteList, Mode=OneWay}">
                </ui_ctrl:SgaSpriteListBox>
            </StackPanel>

            <Canvas Grid.Row="2" 
                    Name="PropertyGridCanvas"
                    ClipToBounds="True"
                    Height="{Binding ZoomState.BasePropertyGridHeight}">
                
                <!-- 캔버스 자체가 내부 요소를 Grid 처럼 꽉채우지 않는다. 
                     따라서 캔버스내부에 그리드를 두고 그리드의 크기를 캔버스크기로 맞춰주면
                     캔버스내에서 Control들을 꽉채울 수 있게된다.
                     https://stackoverflow.com/questions/14781300/xaml-how-to-get-canvass-child-to-fill-the-entire-canvas
                
                     Auto로 해놓으니까 수직 스크롤바가 안생김.. 이녀석도 줌레벨에 따라 변경해주도록 함
                 -->
                <Grid Width="{Binding ElementName=PropertyGridCanvas, Path=ActualWidth}"
                      Height="{Binding ElementName=PropertyGridCanvas, Path=ActualHeight}">
                    <ui_ctrl:UIElementPropertyGrid x:Name="UIElementPropertyGrid" 
                                               FontSize="12" 
                                               Width="Auto"
                                               AutoGenerateProperties="True"
                                               ShowAdvancedOptions="False">
                        <ui_ctrl:UIElementPropertyGrid.Margin >
                            <Thickness Top="{x:Static local:Constant.PropertyGridUpperInspectorHide}"
                                       Bottom="{x:Static local:Constant.PropertyGridLowerInspectorHide}"/>
                        </ui_ctrl:UIElementPropertyGrid.Margin>
                    </ui_ctrl:UIElementPropertyGrid>
                </Grid>

                
            </Canvas>

            <!--<ui_ctrl:UIElementPropertyGrid Grid.Row="2"
                                               x:Name="ElementPropertyGrid" 
                                               FontSize="12" 
                                               Height="{Binding ZoomState.BasePropertyGridHeight}"
                                               AutoGenerateProperties="True"
                                               ShowAdvancedOptions="False" Margin="0, 0, 0, -60">
                </ui_ctrl:UIElementPropertyGrid>-->
            
        </Grid>

        
    </DockPanel>
</Window>